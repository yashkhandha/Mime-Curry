@model Assignment.News

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Scripts.Render("~/bundles/javascript")
@Scripts.Render("~/bundles/jqueryval")
@Styles.Render("~/Content/base/css")

<h2 class="panel-heading">Create News</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NewsHeadline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewsHeadline, new { htmlAttributes = new { @class = "form-control", Title = "Enter news headline here" } })
                @Html.ValidationMessageFor(model => model.NewsHeadline, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewsDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewsDescription, new { htmlAttributes = new { @class = "form-control", Title = "Enter news description here" } })
                @Html.ValidationMessageFor(model => model.NewsDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewsDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewsDate, new { htmlAttributes = new { @class = "form-control", @id = "dateinput", autocomplete = "off", type = "Date", Title = "Enter news date here" } })
                @Html.ValidationMessageFor(model => model.NewsDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    <button type="button" class="btn-link">
        <p>@Html.ActionLink("Back to List", "Index")</p>
    </button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
